// <auto-generated />
using System;
using Backend.PeopleRegistry.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PeopleRegistry.Infrastructure.Migrations
{
    [DbContext(typeof(PeopleDbContext))]
    [Migration("20251002225426_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.PeopleRegistry.Domain.Anschrift.Anschrift", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Hausnummer")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Postleitzahl")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Strasse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Anschrift");

                    b.HasIndex("PersonId");

                    b.ToTable("anschrift", "dbo");
                });

            modelBuilder.Entity("Backend.PeopleRegistry.Domain.Person.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("Geburtsdatum")
                        .HasColumnType("date");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Person");

                    b.ToTable("person", "dbo");
                });

            modelBuilder.Entity("Backend.PeopleRegistry.Domain.Telefonverbindung.Telefonverbindung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefonnummer")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_Telefonverbindung");

                    b.HasIndex("PersonId");

                    b.ToTable("telefonverbindung", "dbo");
                });

            modelBuilder.Entity("Backend.PeopleRegistry.Domain.Anschrift.Anschrift", b =>
                {
                    b.HasOne("Backend.PeopleRegistry.Domain.Person.Person", "Person")
                        .WithMany("Anschriften")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Anschrift_Person");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Backend.PeopleRegistry.Domain.Telefonverbindung.Telefonverbindung", b =>
                {
                    b.HasOne("Backend.PeopleRegistry.Domain.Person.Person", "Person")
                        .WithMany("Telefonverbindungen")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Telefon_Person");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Backend.PeopleRegistry.Domain.Person.Person", b =>
                {
                    b.Navigation("Anschriften");

                    b.Navigation("Telefonverbindungen");
                });
#pragma warning restore 612, 618
        }
    }
}
